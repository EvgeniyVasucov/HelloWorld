using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;
using System.Net.Http;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.IO;
using System.Net;
using Newtonsoft.Json;
using System.Data;
using System.Net.Http;
using System.Net.Http.Json;
class Program
{
    static HttpClient httpClient = new HttpClient();
    static async Task Main()
    {
        // получаем ответ
        Text? text = await httpClient.GetFromJsonAsync<Text>("https://keysystems.ru/files/misc/tasks/template.json");

        DataSet dataSet = new DataSet(text?.DataSetName);
        DataTable dataTable = new DataTable(text?.Tables?[0].TableName);

        DataColumn Columns = new DataColumn("Columns", typeof(string));
        DataColumn Row = new DataColumn("Row", typeof(string));

        dataTable.Columns.AddRange(new DataColumn[] { Columns, Row });

        for (int j = 0; j < 1; j++)
        {
            for (int i = 0; i < text?.Tables?[0].Columns?.Length; i++)
            {
                DataRow row1 = dataTable.NewRow();
                row1["Columns"] = text?.Tables?[0].Columns?[i];
               
                DataRow row2 = dataTable.NewRow();
                row2["Row"] = text?.Tables?[0].Rows?[0][i];
                dataTable.Rows.Add(row1);
                dataTable.Rows.Add(row2);
            }            
        }

        dataSet.Tables.Add(dataTable);

        Console.WriteLine(dataSet.DataSetName);
        foreach (DataTable table in dataSet.Tables)
        {
            Console.WriteLine(dataTable.TableName);
            foreach (DataRow row in table.Rows)
            {
                foreach (DataColumn column in table.Columns)
                {
                    //Console.Write(column + " ");
                    Console.WriteLine(row[column]);
                }
            }
        }
    }
}
public class Text
{
    public string? DataSetName { get; set; }
    public List<Table>? Tables { get; set; }
}
public class Table
{
    public string? TableName { get; set; }
    public string[]? Columns { get; set; }
    public object[][]? Rows { get; set; }
    public object? DeletedRows { get; set; }
}
